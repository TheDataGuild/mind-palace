## Pass 1

### Prompt

Given the following text, define a property graph model. Follow these rules:

- create nodes for instances which fit one of the given types
- parse relations from the text between the created nodes
- output in Cypher language

Node Types: Character, Location, Object, Testimony, Evidence

Text:
"""
"""

### Output

model: `gpt-3.5-turbo`

```cypher
CREATE (narrator:Character {name: "narrator"})
CREATE (dupin:Character {name: "Auguste Dupin"})
CREATE (paris:Location {name: "Paris"})
CREATE (library:Location {name: "library"})
CREATE (house:Location {name: "grotesque house"})

CREATE (books:Object {name: "books"})
CREATE (volume:Object {name: "special volume"})

CREATE (narrator)-[:KNOWS]->(dupin)
CREATE (narrator)-[:IS_IN]->(paris)
CREATE (dupin)-[:IS_IN]->(paris)
CREATE (dupin)-[:LIKES]->(books)
CREATE (narrator)-[:LIKES]->(books)
CREATE (narrator)-[:MET]->(library)
CREATE (dupin)-[:MET]->(library)
CREATE (dupin)-[:BONDED_OVER]->(volume)
CREATE (narrator)-[:BONDED_OVER]->(volume)
CREATE (narrator)-[:STAYS_IN]->(house)
CREATE (dupin)-[:STAYS_IN]->(house)
```

;; needs to refactor those relations so the nodes don't get duplicated. i.e. use MATCH ... CREATE

## Pass 2

### Prompt

Fix this Cypher  ...





## Reference

Text = paste the text from `./murders_in_rue_morgue_summary.txt`, one paragraph at a time

Drop database,

```cypher
MATCH (n)
DETACH DELETE n;
```
